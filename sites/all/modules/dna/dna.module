<?php

function dna_menu() {
    $items['dna'] = array(
        'title' => 'Helix Matcher',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('dna_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['matched_double_helix'] = array(
        'title' => 'Your Completed Double Helix!!!',
        'page callback' => 'helix_results',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function dna_form() {
      $form['nucleotide_sequence'] = array(
            '#title' => 'Nucleotide Sequence',
            '#description' => 'Enter a series of letters, choosing from (A, T, G, C).',
            '#placeholder' => 'example: TAGCAT',
            '#type' => 'textfield',
            '#required' => TRUE,
            '#element_validate' => array('helix_matcher_form_validate'),
      );
      $form['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Match Um!'
      );
      return $form;
}

function helix_matcher_form_validate($element) {
      $valid_characters = array('A', 'T', 'C', 'G');
      $characters = str_split($element['#value']);
      foreach($characters as $character) {
            if(!in_array($character, $valid_characters)) {
                  form_error($element, t('Error: Please enter only the following valid characters - A T C G.'));
            }
      }
}

function helix_matcher_submit($form, &$form_state) {
      $nucleotide_sequence = $form_state['values']['nucleotide_sequence'];
      $nucleotide_matches = match_nucleotide($nucleotide_sequence);
      $_SESSION['original_input'] = $nucleotide_sequence;
      $_SESSION['matched_output'] = $nucleotide_matches;
      $form_state['redirect'] = 'matched_double_helix';
}


function match_nucleotide($input) {
    $broken_helix = str_split($input);
    $nucleotide_match_array = array();
    foreach($broken_helix as $nucleotide) {
        $capsed_nucleotide = strtoupper($nucleotide);
        if ($capsed_nucleotide == 'A') {
            array_push($nucleotide_match_array, 'T');
        } elseif ($capsed_nucleotide == 'T') {
            array_push($nucleotide_match_array, 'A');
        } elseif ($capsed_nucleotide == 'C') {
            array_push($nucleotide_match_array, 'G');
        } elseif ($capsed_nucleotide == 'G') {
            array_push($nucleotide_match_array, 'C');
        }
    }
    $nucleotide_match = join('', $nucleotide_match_array);
    return $nucleotide_match;
}

function helix_results() {
    $nucleotide_sequence = $_SESSION['original_input'];
    $nucleotide_matches = $_SESSION['matched_output'];
    return 'Your original sequence:' . $nucleotide_sequence . '<br>' . 'And their matches:' . $nucleotide_matches;
}
